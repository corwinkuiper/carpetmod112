--- ../src-base/minecraft/net/minecraft/entity/player/EntityPlayerMP.java
+++ ../src-work/minecraft/net/minecraft/entity/player/EntityPlayerMP.java
@@ -114,6 +114,15 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import net.minecraft.entity.item.EntityMinecart;
+import net.minecraft.entity.passive.EntityLlama;
+
+import carpet.CarpetSettings;
+import carpet.helpers.EntityPlayerActionPack;
+import carpet.helpers.StatSubItem;
+import carpet.helpers.IPlayerSensitiveTileEntity;
+import carpet.logging.logHelpers.DamageReporter;
+
 public class EntityPlayerMP extends EntityPlayer implements IContainerListener
 {
     private static final Logger field_147102_bM = LogManager.getLogger();
@@ -153,6 +162,12 @@
     public int field_71138_i;
     public boolean field_71136_j;
 
+    //CM
+    public EntityPlayerActionPack actionPack;
+
+    // [CM] PistonClippingFix -- Counter
+    public int pistonClippingCounter;
+
     public EntityPlayerMP(MinecraftServer p_i45285_1_, WorldServer p_i45285_2_, GameProfile p_i45285_3_, PlayerInteractionManager p_i45285_4_)
     {
         super(p_i45285_2_, p_i45285_3_);
@@ -188,6 +203,9 @@
         {
             this.func_70107_b(this.field_70165_t, this.field_70163_u + 1.0D, this.field_70161_v);
         }
+
+        //CM
+        actionPack = new EntityPlayerActionPack(this);
     }
 
     public void func_70037_a(NBTTagCompound p_70037_1_)
@@ -313,6 +331,9 @@
 
     public void func_70071_h_()
     {
+        //CM
+        actionPack.onUpdate();
+        //CM end
         this.field_71134_c.func_73075_a();
         --this.field_147101_bU;
 
@@ -365,6 +386,13 @@
             }
         }
 
+        if (CarpetSettings.ridingPlayerUpdateFix) {
+            Entity riding = func_184208_bv();
+            if(riding != null && (riding instanceof EntityMinecart || riding instanceof EntityLlama)){
+                this.field_71133_b.func_184103_al().func_72358_d(this);
+            }
+        }
+
         CriteriaTriggers.field_193135_v.func_193182_a(this);
 
         if (this.field_193107_ct != null)
@@ -373,6 +401,9 @@
         }
 
         this.field_192042_bX.func_192741_b(this);
+
+        // Clears the dupe item for the duping bug CARPET-XCOM
+        clearDupeItem();
     }
 
     public void func_71127_g()
@@ -605,6 +636,7 @@
 
             if (!flag && this.field_147101_bU > 0 && p_70097_1_ != DamageSource.field_76380_i)
             {
+                DamageReporter.modify_damage(this, p_70097_1_, p_70097_2_, 0.0F, "respawn protection");
                 return false;
             }
             else
@@ -615,6 +647,7 @@
 
                     if (entity instanceof EntityPlayer && !this.func_96122_a((EntityPlayer)entity))
                     {
+                        DamageReporter.modify_damage(this, p_70097_1_, p_70097_2_, 0.0F, "PVP disabled");
                         return false;
                     }
 
@@ -624,6 +657,7 @@
 
                         if (entityarrow.field_70250_c instanceof EntityPlayer && !this.func_96122_a((EntityPlayer)entityarrow.field_70250_c))
                         {
+                            DamageReporter.modify_damage(this, p_70097_1_, p_70097_2_, 0.0F, "PVP disabled");
                             return false;
                         }
                     }
@@ -704,6 +738,8 @@
         if (p_147097_1_ != null)
         {
             SPacketUpdateTileEntity spacketupdatetileentity = p_147097_1_.func_189518_D_();
+            if (p_147097_1_ instanceof IPlayerSensitiveTileEntity)
+                spacketupdatetileentity = ((IPlayerSensitiveTileEntity) p_147097_1_).getUpdatePacketPlayerSensitive(this);
 
             if (spacketupdatetileentity != null)
             {
@@ -1035,6 +1071,10 @@
             {
                 this.func_96123_co().func_96529_a(this.func_70005_c_(), scoreobjective).func_96649_a(p_71064_2_);
             }
+
+            // CM
+            if (p_71064_1_ instanceof StatSubItem) func_71064_a(((StatSubItem) p_71064_1_).getBase(), p_71064_2_);
+            // CM END
         }
     }
 
@@ -1169,7 +1209,7 @@
 
     protected void func_70688_c(PotionEffect p_70688_1_)
     {
-        super.func_70688_c(p_70688_1_);
+        if (!CarpetSettings.effectsFix) super.func_70688_c(p_70688_1_);
         this.field_71135_a.func_147359_a(new SPacketRemoveEntityEffect(this.func_145782_y(), p_70688_1_.func_188419_a()));
 
         if (p_70688_1_.func_188419_a() == MobEffects.field_188424_y)
@@ -1178,6 +1218,7 @@
         }
 
         CriteriaTriggers.field_193139_z.func_193153_a(this);
+        if (CarpetSettings.effectsFix) super.func_70688_c(p_70688_1_);
     }
 
     public void func_70634_a(double p_70634_1_, double p_70634_3_, double p_70634_5_)
@@ -1221,6 +1262,7 @@
         }
         else
         {
+            disableSpectatePlayers = false; // Rule to prevent /c camera mode to spectate other players, disable after exiting spectator mode CARPET-XCOM
             this.func_175399_e(this);
         }
 
@@ -1439,4 +1481,49 @@
     {
         return this.field_193110_cw;
     }
+
+    // Adding this dupe feature to make it compatible with carpet 12.0 as per community request. CARPET-XCOM
+    private int dupe;
+    private boolean scanForDuping;
+    public void clearDupeItem() {
+        dupe = Integer.MIN_VALUE;
+    }
+    public void dupeItem(int slot) {
+        if(scanForDuping){
+            dupe = slot;
+        }
+    }
+    public int getDupeItem() {
+        return dupe;
+    }
+    public void dupeItemScan(boolean s){
+        scanForDuping = s;
+    }
+
+    // Remove some exploits caused by /c to and /s
+    private double storeX;
+    private double storeY;
+    private double storeZ;
+    private float storeYaw;
+    private float storePitch;
+    private int storedDim;
+    protected boolean disableSpectatePlayers;
+    public void storeCameraData() {
+        storeX = field_70165_t;
+        storeY = field_70163_u;
+        storeZ = field_70161_v;
+        storeYaw = field_70177_z;
+        storePitch = field_70125_A;
+        storedDim = field_71093_bK;
+        disableSpectatePlayers = CarpetSettings.cameraModeDisableSpectatePlayers;
+    }
+    public void moveToStoredCameraData(){
+        if(CarpetSettings.cameraModeRestoreLocation){
+            if(storedDim != field_71093_bK) func_184204_a(storedDim);
+            field_71135_a.func_147364_a(storeX, storeY, storeZ, storeYaw, storePitch);
+        }
+    }
+    public boolean isDisableSpectatePlayers(){
+        return disableSpectatePlayers;
+    }
 }
